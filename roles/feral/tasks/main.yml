---
- name: Set up authorized_keys for the deploy user
  no_log: True
  authorized_key: user="{{ ansible_ssh_user }}" key="{{ item }}"
  with_file:
    - "{{ secured_src_dir }}/public-key.pem"
  tags:
    - feral

- name: Create public_html directory
  file:
    path: "~/www/{{ ansible_ssh_user }}.{{ ansible_fqdn }}/public_html/webapps/"
    mode: 0755
    recurse: yes
    state: directory
  tags:
    - feral

- name: Copy robots.txt
  copy:
    src: robots.txt
    dest: "~/www/{{ ansible_ssh_user }}.{{ ansible_fqdn }}/public_html/robots.txt"
    mode: 0600
  tags:
    - feral

- name: Convert from apache to nginx
  file:
    path: "~/.nginx/"
    mode: 0755
    state: directory
  tags:
    - feral

- name: Copy dotfiles
  copy:
    src: "{{ item }}"
    dest: "~/.{{ item }}"
    mode: 0644
  with_items:
    - bash_aliases
    - screenrc
    - vimrc
  tags:
    - feral

- name: Copy executable dotfiles
  copy:
    src: "{{ item }}"
    dest: "~/.{{ item }}"
    mode: 0755
  with_items:
    - bashrc
    - profile
  tags:
    - feral

- name: create torrent directories
  file:
    path: "{{ deluge_datadir }}/{{ item }}/"
    mode: 0755
    recurse: yes
    state: directory
  with_items:
    - completed
    - inprogress
    - seedLT
    - toSync
    - upload
  tags:
    - feral

- name: Read the Deluge daemon port
  command: 'sed -rn ''s/(.*)"daemon_port": (.*),/\2/p'' ~/.config/deluge/core.conf'
  register: port_result
  changed_when: port_result.stdout.strip() != ""
  tags:
    - feral

- set_fact:
    deluge_port: "{{ port_result.stdout.strip() }}"
  tags:
    - feral

- name: Read the Deluge password
  command: sed -rn "s/{{ ansible_ssh_user }}:(.*):(.*)/\1/p" ~/.config/deluge/auth
  changed_when: pass_result.stdout.strip() != ""
  register: pass_result
  tags:
    - feral

- set_fact:
    deluge_password: "{{ pass_result.stdout.strip() }}"
  tags:
    - feral

- name: Configure Deluge
  template:
    src: core.conf.j2
    dest: "~/.config/deluge/core.conf"
    mode: 0600
  when: enabled
  tags:
    - feral

- name: Install virtualenv module
  pip:
    name: virtualenv
    state: latest
    extra_args: "--user"
  tags:
    - feral
